{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red255\green255\blue255;\red153\green168\blue186;
\red88\green118\blue71;\red191\green100\blue38;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c42745\c42745\c42745;\csgray\c100000;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c33725\c51765\c67843;}
\margl1440\margr1440\vieww12120\viewh21000\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 // 31: array - `Array.prototype.fill` method\
// To do: make all tests pass, leave the assert lines unchanged!\
\
\cf4 describe(\cf5 '`Array.prototype.fill` can fill up an array with one value'\cf6 , \cf4 () => \{\
\
  it(\cf5 '`fill(0)` will populate `0` into each array element'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 arr = 
\f1\b \cf6 new 
\f0\b0 \cf4 Array(\cf7 3\cf4 ).fill(\cf7 0\cf4 )\cf6 ;\
    \
    \cf4 assert.deepEqual(arr\cf6 , \cf4 [\cf7 0\cf6 , \cf7 0\cf6 , \cf7 0\cf4 ])\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'fill only changes content, adds no new elements'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 arr = [].fill(\cf7 0\cf4 )\cf6 ;\
    \
    \cf4 assert.deepEqual(arr\cf6 , \cf4 [])\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'second parameter to `fill()` is the position where to start filling'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 fillPosition = \cf7 2\cf6 ;\
    
\f1\b const 
\f0\b0 \cf4 arr = [\cf7 1\cf6 ,\cf7 2\cf6 ,\cf7 3\cf4 ].fill(\cf7 42\cf6 , \cf4 fillPosition)\cf6 ;\
    \
    \cf4 assert.deepEqual(arr\cf6 , \cf4 [\cf7 1\cf6 , \cf7 2\cf6 , \cf7 42\cf4 ])\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'third parameter is the position where filling stops'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 fillStartAt = \cf7 1\cf6 ;\
    
\f1\b const 
\f0\b0 \cf4 fillEndAt = \cf7 2\cf6 ;\
    
\f1\b const 
\f0\b0 \cf4 arr = [\cf7 1\cf6 ,\cf7 2\cf6 ,\cf7 3\cf4 ].fill(\cf7 42\cf6 , \cf4 fillStartAt\cf6 , \cf4 fillEndAt)\cf6 ;\
    \
    \cf4 assert.deepEqual(arr\cf6 , \cf4 [\cf7 1\cf6 , \cf7 42\cf6 , \cf7 3\cf4 ])\cf6 ;\
  \cf4 \})\cf6 ;\
\
\cf4 \})\cf6 ;\
\
}