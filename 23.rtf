{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;\red191\green100\blue38;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c33725\c51765\c67843;}
\margl1440\margr1440\vieww12120\viewh20500\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 // 23: class - accessors\
// To do: make all tests pass, leave the assert lines unchanged!\
\
\cf4 describe(\cf5 'class accessors (getter and setter)'\cf6 , \cf4 () => \{\
\
  it(\cf5 'only a getter is defined like a method prefixed with `get`'\cf6 , \cf4 () => \{\
    
\f1\b \cf6 class 
\f0\b0 \cf4 MyAccount \{\
      
\f1\b \cf6 get 
\f0\b0 \cf4 balance() \{ 
\f1\b \cf6 return 
\f0\b0 \cf4 Infinity\cf6 ; \cf4 \}\
    \}\
    \
    assert.equal(
\f1\b \cf6 new 
\f0\b0 \cf4 MyAccount().balance\cf6 , \cf4 Infinity)\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'a setter has the prefix `set`'\cf6 , \cf4 () => \{\
    
\f1\b \cf6 class 
\f0\b0 \cf4 MyAccount \{\
      
\f1\b \cf6 get 
\f0\b0 \cf4 balance() \{ 
\f1\b \cf6 return this
\f0\b0 \cf4 .amount\cf6 ; \cf4 \}\
      
\f1\b \cf6 set 
\f0\b0 \cf4 balance(amount) \{ 
\f1\b \cf6 this
\f0\b0 \cf4 .amount = amount\cf6 ; \cf4 \}\
    \}\
    \
    
\f1\b \cf6 const 
\f0\b0 \cf4 account = 
\f1\b \cf6 new 
\f0\b0 \cf4 MyAccount()\cf6 ;\
    \cf4 account.balance = \cf7 23\cf6 ;\
    \cf4 assert.equal(account.balance\cf6 , \cf7 23\cf4 )\cf6 ;\
  \cf4 \})\cf6 ;\
  \
  \cf4 describe(\cf5 'dynamic accessors'\cf6 , \cf4 () => \{\
    \
    it(\cf5 'a dynamic getter name is enclosed in [ and ]'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
      
\f1\b \cf6 const 
\f0\b0 \cf4 balance = \cf5 'yourMoney'\cf6 ;\
      
\f1\b class 
\f0\b0 \cf4 YourAccount \{\
        get [balance]() \{ 
\f1\b \cf6 return 
\f0\b0 \cf4 -Infinity\cf6 ; \cf4 \}\
      \}\
      \
      assert.equal(
\f1\b \cf6 new 
\f0\b0 \cf4 YourAccount().yourMoney\cf6 , \cf4 -Infinity)\cf6 ;\
    \cf4 \})\cf6 ;\
    \
    \cf4 it(\cf5 'a dynamic setter name as well'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
      
\f1\b \cf6 const 
\f0\b0 \cf4 propertyName = \cf5 'balance'\cf6 ;\
      
\f1\b class 
\f0\b0 \cf4 MyAccount \{\
        get [propertyName]() \{ 
\f1\b \cf6 return this
\f0\b0 \cf4 .amount\cf6 ; \cf4 \}\
        set [propertyName](amount) \{ 
\f1\b \cf6 this
\f0\b0 \cf4 .amount = \cf7 23\cf6 ; \cf4 \}\
      \}\
      \
      
\f1\b \cf6 const 
\f0\b0 \cf4 account = 
\f1\b \cf6 new 
\f0\b0 \cf4 MyAccount()\cf6 ;\
      \cf4 account.balance = \cf7 42\cf6 ;\
      \cf4 assert.equal(account.balance\cf6 , \cf7 23\cf4 )\cf6 ;\
    \cf4 \})\cf6 ;\
  \cf4 \})\cf6 ;\
  \
\cf4 \})\cf6 ;\
}