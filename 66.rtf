{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red109\green109\blue109;\red32\green32\blue32;\red153\green168\blue186;
\red88\green118\blue71;\red191\green100\blue38;\red86\green132\blue173;}
{\*\expandedcolortbl;;\csgenericrgb\c42745\c42745\c42745;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c60000\c65882\c72941;
\csgenericrgb\c34510\c46275\c27843;\csgenericrgb\c74902\c39216\c14902;\csgenericrgb\c33725\c51765\c67843;}
\margl1440\margr1440\vieww12120\viewh20500\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs24 \cf2 \cb3 // 66: object-literal - getter\
// To do: make all tests pass, leave the assert lines unchanged!\
\
\cf4 describe(\cf5 'An object literal can also contain getters'\cf6 , \cf4 () => \{\
\
  it(\cf5 'just prefix the property with `get` (and make it a function)'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 obj = \{\
      
\f1\b \cf6 get 
\f0\b0 \cf4 x() \{ 
\f1\b \cf6 return 
\f0\b0 \cf5 'ax'\cf6 ; \cf4 \}\
    \}\cf6 ;\
    \
    \cf4 assert.equal(obj.x\cf6 , \cf5 'ax'\cf4 )\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'must have NO parameters'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 obj = \{\
      
\f1\b \cf6 get 
\f0\b0 \cf4 x() \{ 
\f1\b \cf6 return 
\f0\b0 \cf5 'ax'\cf6 ; \cf4 \}\
    \}\cf6 ;\
    \
    \cf4 assert.equal(obj.x\cf6 , \cf5 'ax'\cf4 )\cf6 ;\
  \cf4 \})\cf6 ;\
\
\
  \cf4 it(\cf5 'can be a computed property (an expression enclosed in `[]`)'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 keyName = \cf5 'x'\cf6 ;\
    
\f1\b const 
\f0\b0 \cf4 obj = \{\
      get [keyName]() \{ 
\f1\b \cf6 return 
\f0\b0 \cf5 'ax'\cf6 ; \cf4 \}\
    \}\cf6 ;\
    \
    \cf4 assert.equal(obj.x\cf6 , \cf5 'ax'\cf4 )\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf4 it(\cf5 'can be removed using delete'\cf6 , 
\f1\b function
\f0\b0 \cf4 () \{\
    
\f1\b \cf6 const 
\f0\b0 \cf4 obj = \{\
      
\f1\b \cf6 get 
\f0\b0 \cf4 x() \{ 
\f1\b \cf6 return 
\f0\b0 \cf5 'ax'\cf6 ; \cf4 \}\
    \}\cf6 ;\
    
\f1\b delete 
\f0\b0 \cf4 obj.x\cf6 ;\
    \cf4 assert.equal(obj.x\cf6 , 
\f1\b void 
\f0\b0 \cf7 0\cf4 )\cf6 ;\
  \cf4 \})\cf6 ;\
\
  \cf2 // The following dont seem to work in the current transpiler version\
  // but should be correct, as stated here https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/get\
  // It might be corrected later, new knowledge welcome.\
  \
  //it('must not overlap with a pure property', function() \{\
  //  const obj = \{\
  //    x: 1,\
  //    get x() \{ return 'ax'; \}\
  //  \};\
  //  \
  //  assert.equal(obj.x, 'ax');\
  //\});\
  //\
  //it('multiple `get` for the same property are not allowed', function() \{\
  //  const obj = \{\
  //    x: 1,\
  //    get x() \{ return 'ax'; \},\
  //    get x() \{ return 'ax1'; \}\
  //  \};\
  //  \
  //  assert.equal(obj.x, 'ax');\
  //\});\
\cf4 \})\cf6 ;\
\
}